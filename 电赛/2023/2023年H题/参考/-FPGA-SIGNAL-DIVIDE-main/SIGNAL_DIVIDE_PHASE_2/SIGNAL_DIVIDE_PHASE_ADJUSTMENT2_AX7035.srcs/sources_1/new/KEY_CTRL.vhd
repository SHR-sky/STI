LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.STD_LOGIC_SIGNED.ALL;

ENTITY KEY_CTRL IS 
PORT(
  ACLK:IN STD_LOGIC;
  ARESETN:IN STD_LOGIC;
  KEY0:IN STD_LOGIC;
  KEY1:IN STD_LOGIC;
  KEY2:IN STD_LOGIC;
  KEY3:IN STD_LOGIC;
  KEY4:IN STD_LOGIC;
  PHASE:OUT STD_LOGIC_VECTOR(15 DOWNTO 0)
);
END ENTITY;

ARCHITECTURE BEHAVE OF KEY_CTRL IS 

SIGNAL KEY0_T:STD_LOGIC:= '0';
SIGNAL KEY0_T2:STD_LOGIC:= '0';
SIGNAL KEY0_T3:STD_LOGIC:= '0';
SIGNAL KEY0_T4:STD_LOGIC:= '0';

SIGNAL KEY1_T:STD_LOGIC:= '0';
SIGNAL KEY1_T2:STD_LOGIC:= '0';
SIGNAL KEY1_T3:STD_LOGIC:= '0';
SIGNAL KEY1_T4:STD_LOGIC:= '0';

SIGNAL KEY2_T:STD_LOGIC:= '0';
SIGNAL KEY2_T2:STD_LOGIC:= '0';
SIGNAL KEY2_T3:STD_LOGIC:= '0';
SIGNAL KEY2_T4:STD_LOGIC:= '0';

SIGNAL KEY3_T:STD_LOGIC:= '0';
SIGNAL KEY3_T2:STD_LOGIC:= '0';
SIGNAL KEY3_T3:STD_LOGIC:= '0';
SIGNAL KEY3_T4:STD_LOGIC:= '0';

SIGNAL KEY4_T:STD_LOGIC:= '0';
SIGNAL KEY4_T2:STD_LOGIC:= '0';
SIGNAL KEY4_T3:STD_LOGIC:= '0';
SIGNAL KEY4_T4:STD_LOGIC:= '0';

SIGNAL NUM:INTEGER RANGE 0 TO 255:= 0;


BEGIN

  PROCESS IS 
  VARIABLE CNT:INTEGER:= 0;
  BEGIN
  WAIT UNTIL RISING_EDGE(ACLK);
    IF CNT >= 2499999 THEN
      KEY0_T <= NOT KEY0;
      KEY1_T <= NOT KEY1;
      KEY2_T <= NOT KEY2;
      KEY3_T <= NOT KEY3;
      KEY4_T <= NOT KEY4;
      KEY0_T2 <= KEY0_T;
      KEY1_T2 <= KEY1_T;
      KEY2_T2 <= KEY2_T;
      KEY3_T2 <= KEY3_T;
      KEY4_T2 <= KEY4_T;
      CNT := 0;
    ELSE
      CNT := CNT + 1;
    END IF;
    KEY0_T3 <= KEY0_T2;
    KEY1_T3 <= KEY1_T2;
    KEY2_T3 <= KEY2_T2;
    KEY3_T3 <= KEY3_T2;
    KEY4_T3 <= KEY4_T2;
    KEY0_T4 <= KEY0_T3;
    KEY1_T4 <= KEY1_T3;
    KEY2_T4 <= KEY2_T3;
    KEY3_T4 <= KEY3_T3;
    KEY4_T4 <= KEY4_T3;  
  END PROCESS;
  
  PROCESS IS BEGIN
  WAIT UNTIL RISING_EDGE(ACLK);
    IF ARESETN = '0' THEN
      NUM <= 0;
    ELSE
      IF KEY0_T3 = '1' AND KEY0_T4 = '0' THEN
        NUM <= 0;
      ELSIF KEY1_T3 = '1' AND KEY1_T4 = '0' THEN
        IF NUM - 1 <= 0 THEN
          NUM <= 0;
        ELSE
          NUM <= NUM - 1;
        END IF;
      ELSIF KEY2_T3 = '1' AND KEY2_T4 = '0' THEN
        IF NUM + 1 >= 180 THEN
          NUM <= 180;
        ELSE
          NUM <= NUM + 1;
        END IF;
      ELSIF KEY3_T3 = '1' AND KEY3_T4 = '0' THEN
        IF NUM - 10 <= 0 THEN
          NUM <= 0;
        ELSE
          NUM <= NUM - 10;
        END IF;
      ELSIF KEY4_T3 = '1' AND KEY4_T4 = '0' THEN
        IF NUM + 10 >= 180 THEN
          NUM <= 180;
        ELSE
          NUM <= NUM + 10;
        END IF;
      END IF;
    END IF;  
  END PROCESS;
  
  PHASE <= CONV_STD_LOGIC_VECTOR(NUM,16);
      
END ARCHITECTURE;