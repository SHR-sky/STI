LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;

ENTITY LUT1_GEN IS 
PORT(
  ACLK:IN STD_LOGIC;
  ADDR:IN STD_LOGIC_VECTOR(15 DOWNTO 0);
  DOUT:OUT STD_LOGIC_VECTOR(23 DOWNTO 0)
);
END ENTITY;

ARCHITECTURE BEHAVE OF LUT1_GEN IS 

TYPE LUT_TYPE IS ARRAY (0 TO 511) OF STD_LOGIC_VECTOR(23 DOWNTO 0);
SIGNAL LUT1:LUT_TYPE:= (
  "010000000000000000000000", 
  "000000010001110111110000", 
  "000000100011101111001011", 
  "000000110101100101111001", 
  "000001000111011011100011", 
  "000001011001001111110101", 
  "000001101011000010011000", 
  "000001111100110010110101", 
  "000010001110100000110110", 
  "000010100000001100000101", 
  "000010110001110100001101", 
  "000011000011011000110111", 
  "000011010100111001101100", 
  "000011100110010110011001", 
  "000011110111101110100110", 
  "000100001001000001111101", 
  "000100011010010000001011", 
  "000100101011011000110111", 
  "000100111100011011101111", 
  "000101001101011000011011", 
  "000101011110001110101000", 
  "000101101110111110000000", 
  "000101111111100110001110", 
  "000110010000000110111101", 
  "000110100000011111111001", 
  "000110110000110000101101", 
  "000111000000111001000101", 
  "000111010000111000101110", 
  "000111100000101111010010", 
  "000111110000011100011111", 
  "001000000000000000000000", 
  "001000001111011001100010", 
  "001000011110101000110010", 
  "001000101101101101011101", 
  "001000111100100111010001", 
  "001001001011010101111010", 
  "001001011001111001000110", 
  "001001101000010000100011", 
  "001001110110011011111111", 
  "001010000100011011001001", 
  "001010010010001101101110", 
  "001010011111110011011111", 
  "001010101101001100001001", 
  "001010111010010111011100", 
  "001011000111010101001000", 
  "001011010100000100111100", 
  "001011100000100110101001", 
  "001011101100111001111111", 
  "001011111000111110101111", 
  "001100000100110100101001", 
  "001100010000011011011111", 
  "001100011011110011000010", 
  "001100100110111011000100", 
  "001100110001110011011000", 
  "001100111100011011101111", 
  "001101000110110011111100", 
  "001101010000111011110011", 
  "001101011010110011000111", 
  "001101100100011001101011", 
  "001101101101101111010100", 
  "001101110110110011110101", 
  "001101111111100111000101", 
  "001110001000001000110110", 
  "001110010000011001000000", 
  "001110011000010111010111", 
  "001110100000000011110010", 
  "001110100111011110000111", 
  "001110101110100110001101", 
  "001110110101011011111011", 
  "001110111011111111001000", 
  "001111000010001111101100", 
  "001111001000001101100000", 
  "001111001101111000011100", 
  "001111010011010000011000", 
  "001111011000010101001111", 
  "001111011101000110111010", 
  "001111100001100101010011", 
  "001111100101110000010100", 
  "001111101001100111111000", 
  "001111101101001011111010", 
  "001111110000011100010111", 
  "001111110011011001001001", 
  "001111110110000010001101", 
  "001111111000010111100000", 
  "001111111010011000111111", 
  "001111111100000110100111", 
  "001111111101100000010111", 
  "001111111110100110001011", 
  "001111111111011000000101", 
  "001111111111110110000001", 
  "010000000000000000000000", 
  "001111111111110110000001", 
  "001111111111011000000101", 
  "001111111110100110001011", 
  "001111111101100000010111", 
  "001111111100000110100111", 
  "001111111010011000111111", 
  "001111111000010111100000", 
  "001111110110000010001101", 
  "001111110011011001001001", 
  "001111110000011100010111", 
  "001111101101001011111010", 
  "001111101001100111111000", 
  "001111100101110000010100", 
  "001111100001100101010011", 
  "001111011101000110111010", 
  "001111011000010101001111", 
  "001111010011010000011000", 
  "001111001101111000011100", 
  "001111001000001101100000", 
  "001111000010001111101100", 
  "001110111011111111001000", 
  "001110110101011011111011", 
  "001110101110100110001101", 
  "001110100111011110000111", 
  "001110100000000011110010", 
  "001110011000010111010111", 
  "001110010000011001000000", 
  "001110001000001000110110", 
  "001101111111100111000101", 
  "001101110110110011110101", 
  "001101101101101111010100", 
  "001101100100011001101011", 
  "001101011010110011000111", 
  "001101010000111011110011", 
  "001101000110110011111100", 
  "001100111100011011101111", 
  "001100110001110011011000", 
  "001100100110111011000100", 
  "001100011011110011000010", 
  "001100010000011011011111", 
  "001100000100110100101001", 
  "001011111000111110101111", 
  "001011101100111001111111", 
  "001011100000100110101001", 
  "001011010100000100111100", 
  "001011000111010101001000", 
  "001010111010010111011100", 
  "001010101101001100001001", 
  "001010011111110011011111", 
  "001010010010001101101110", 
  "001010000100011011001001", 
  "001001110110011011111111", 
  "001001101000010000100011", 
  "001001011001111001000110", 
  "001001001011010101111010", 
  "001000111100100111010001", 
  "001000101101101101011101", 
  "001000011110101000110010", 
  "001000001111011001100010", 
  "001000000000000000000000", 
  "000111110000011100011111", 
  "000111100000101111010010", 
  "000111010000111000101110", 
  "000111000000111001000101", 
  "000110110000110000101101", 
  "000110100000011111111001", 
  "000110010000000110111101", 
  "000101111111100110001110", 
  "000101101110111110000000", 
  "000101011110001110101000", 
  "000101001101011000011011", 
  "000100111100011011101111", 
  "000100101011011000110111", 
  "000100011010010000001011", 
  "000100001001000001111101", 
  "000011110111101110100110", 
  "000011100110010110011001", 
  "000011010100111001101100", 
  "000011000011011000110111", 
  "000010110001110100001101", 
  "000010100000001100000101", 
  "000010001110100000110110", 
  "000001111100110010110101", 
  "000001101011000010011000", 
  "000001011001001111110101", 
  "000001000111011011100011", 
  "000000110101100101111001", 
  "000000100011101111001011", 
  "000000010001110111110000", 
  "010000000000000000000000", 
OTHERS => (OTHERS => '0')
);

ATTRIBUTE ROM_STYLE:STRING;
ATTRIBUTE ROM_STYLE OF LUT1:SIGNAL IS "BLOCK";

SIGNAL ADDR_R:INTEGER:= 0;

BEGIN
  
  ADDR_R <= CONV_INTEGER(ADDR) WHEN ADDR <= 180 ELSE
            CONV_INTEGER(0);
  
  PROCESS IS BEGIN
  WAIT UNTIL RISING_EDGE(ACLK);
    DOUT <= LUT1(ADDR_R);
  END PROCESS;

END ARCHITECTURE;